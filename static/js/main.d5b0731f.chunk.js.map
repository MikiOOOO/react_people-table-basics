{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","components/HomePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","name","sex","slug","to","classNames","PeopleTable","people","searchedSlug","useParams","map","born","died","motherName","fatherName","mother","find","searchingPerson","father","motherInfo","fatherInfo","PeoplePage","useState","setPeople","arePeopleLoaded","setArePeopleLoaded","wasLoadingSuccessful","setWasLoadingSuccessful","useEffect","loadedPeople","catch","finally","Boolean","length","NotFoundPage","HomePage","NavBar","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d5b0731f.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ninterface PersonLinkProps {\n  person: Person,\n}\n\nexport const PersonLink:React.FC<PersonLinkProps> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <NavLink\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface PeopleTableProps {\n  people: Person[],\n}\n\nexport const PeopleTable: React.FC<PeopleTableProps> = ({ people }) => {\n  const { searchedSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => {\n          const {\n            sex, born, died, motherName, fatherName, slug,\n          } = person;\n\n          const mother = people\n            .find(searchingPerson => searchingPerson.name === motherName);\n\n          const father = people\n            .find(searchingPerson => searchingPerson.name === fatherName);\n\n          const motherInfo = mother\n            ? <PersonLink person={mother} />\n            : motherName;\n\n          const fatherInfo = father\n            ? <PersonLink person={father} />\n            : fatherName;\n\n          return (\n            <tr\n              key={person.slug}\n              className={classNames(\n                { 'has-background-warning': searchedSlug === slug },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{motherInfo || '-'}</td>\n              <td>{fatherInfo || '-'}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader/Loader';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [arePeopleLoaded, setArePeopleLoaded] = useState(false);\n  const [wasLoadingSuccessful, setWasLoadingSuccessful] = useState(false);\n\n  useEffect(() => {\n    setArePeopleLoaded(false);\n    getPeople()\n      .then((loadedPeople) => {\n        setPeople(loadedPeople);\n        setWasLoadingSuccessful(true);\n      })\n      .catch(() => setWasLoadingSuccessful(false))\n      .finally(() => setArePeopleLoaded(true));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!arePeopleLoaded && <Loader />}\n\n          {!wasLoadingSuccessful\n            && arePeopleLoaded\n            && (\n              <p\n                data-cy=\"peopleLoadingError\"\n                className=\"has-text-danger\"\n              >\n                Something went wrong\n              </p>\n            )}\n\n          {wasLoadingSuccessful\n            && Boolean(!people.length)\n            && (\n              <p\n                data-cy=\"noPeopleMessage\"\n              >\n                There are no people on the server\n              </p>\n            )}\n\n          {Boolean(people.length) && <PeopleTable people={people} />}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Link } from 'react-router-dom';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"navbar-item\">Home</Link>\n        <Link to=\"/people\" className=\"navbar-item\">People</Link>\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { HomePage } from './components/HomePage';\nimport { NavBar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/people/:searchedSlug\" element={<PeoplePage />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}